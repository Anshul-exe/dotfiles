# WELCOME TEXT
pokeget random --hide-name -s
# oneko &

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

source ~/.oh-my-zsh/custom/themes/powerlevel10k/powerlevel10k.zsh-theme
# source /share/powerlevel10k/powerlevel10k.zsh-theme
# ZSH_THEME="powerlevel10k/powerlevel10k"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# history file setup
HISTSIZE=100000
SAVEHIST=100000
HISTFILE=~/.cache/zsh/histfile

# SHOPT
setopt autocd extendedglob nomatch notify
setopt share_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_verify
setopt autocd       # cd into dir without using typing cd
setopt correct      # automatically corrects typos while cd-ing
setopt INC_APPEND_HISTORY SHARE_HISTORY
unsetopt extended_glob
unsetopt correct_all

unsetopt beep

# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# available - 
plugins=(git zsh-autosuggestions zsh-syntax-highlighting web-search copybuffer copyfile)
# thefuck
source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


########### WILL FIGURE OUT WHATEVER THE FUCK IS ABOVE THIS LATER#################

# # Lines configured by zsh-newuser-install
# Lines configured by zsh-newuser-install
# End of lines configured by zsh-newuser-install

# The following lines were added by compinstall
# zstyle :compinstall filename '/home/mir/.zshrc'
########### End of lines added by compinstall ##############

# # Enable colors and change prompt:
# autoload -U colors && colors
# PS1="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b "

# RANDOM ASS SHITZ
if [ -n "$RANGER_LEVEL" ]; then export PS1="[ranger]$PS1"; fi

# DEFAULT SHITZ
export EDITOR=nvim
# PATH
export PATH=$PATH:/usr/local/bin
export PATH=$PATH:/home/mir/.spicetify
export PATH=$PATH:/usr/bin/spicetify
export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/platform-tools
. "$HOME/.cargo/env"
eval "$(zoxide init zsh)"

# things that should be at last
autoload -Uz compinit
zstyle ':completion:*' menu select
zmodload zsh/complist
compinit
_comp_options+=(globdots)

# Change cursor shape for different vi modes.
function zle-keymap-select {
if [[ ${KEYMAP} == vicmd ]] ||
  [[ $1 = 'block' ]]; then
echo -ne '\e[1 q'
elif [[ ${KEYMAP} == main ]] ||
    [[ ${KEYMAP} == viins ]] ||
    [[ ${KEYMAP} = '' ]] ||
    [[ $1 = 'beam' ]]; then
echo -ne '\e[5 q'
fi
}
zle -N zle-keymap-select
zle-line-init() {
zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
echo -ne "\e[5 q"
}
zle -N zle-line-init
export SYSTEMD_EDITOR=nvim
export EDITOR=nvim
export VISUAL=nvim
export QT_QPA_PLATFORMTHEME="qt5ct"
export LIBVA_DRIVER_NAME=nvidia
export VDPAU_DRIVER=nvidia

# ctrl-r for history inside fzf
fzf-history-widget() {
  local selected=$(cat $HISTFILE | awk -F ';' '{print $2}' | fzf --height 40% --reverse --border --prompt "Fir bhool gae? " --no-sort)
  if [[ -n $selected ]]; then
    LBUFFER="$selected"  # Append the selected history command to the buffer
  fi
  zle redisplay
}

zle -N fzf-history-widget
bindkey "^R" fzf-history-widget

#sourcing shitz
source ~/.oh-my-zsh/custom/aafunction.zsh
source ~/.oh-my-zsh/custom/binds.zsh
source ~/.oh-my-zsh/custom/aliases.zsh
source <(fzf --zsh)

PROMPT='%~ % '

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Created by `pipx` on 2025-02-06 14:35:12
export PATH="$PATH:/home/mir/.local/bin"

# pnpm
export PNPM_HOME="/home/mir/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
