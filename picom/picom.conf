backend = "glx";
vsync = true;
glx-use-copysubbuffer-mesa = true;

glx-copy-from-front = true;
glx-swap-method = 2;
xrender-sync = true;
xrender-sync-fence = true;

fading = true;
fade-delta = 12;         # The speed of fading (higher is slower)
fade-in-step = 0.03;    # Transparency change per frame when fading in
fade-out-step = 0.03;   # Transparency change per frame when fading out

# Enable window animations
animation = {
    enabled = true;
    duration = 200;  # Animation duration in milliseconds

    # Fade effects
    fade-in = true;
    fade-out = true;

    # Slide animations
    slide-in = true;
    slide-out = true;
    slide-in-direction = "top";  # Options: "top", "bottom", "left", "right"
    slide-out-direction = "bottom";  # Options: "top", "bottom", "left", "right"

    # Resize animations
    resize = true;
};
#
# active-opacity = 0.85;
# inactive-opacity = 0.97;
# frame-opacity = 1.0;

# Application-specific settings; these override the default `active-opacity` opacity-rule = [
#     "50:class_g = 'Alacritty' && focused",
#     "80:class_g = 'Alacritty' && !focused"
# ];

opacity-rule = [
  "100:class_g = 'Polybar'"
    # "100:class_g = 'google-chrome-stable'"
    # "90:class_g = 'Google-chrome'",
    # "100:class_g = 'Google-chrome-stable'"

];
 
# Enable shadow
shadow = true;
shadow-radius = 18;     # Adjust the radius for shadow softness
shadow-offset-x = -15;  # Adjust the shadow position
shadow-offset-y = -15;  # Adjust the shadow position
# Set if you want different colour shadows
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;

# Enable rounded corners
corner-radius = 18;     # Adjust the radius for rounded corners
rounded-corners = true;

blur:
{
method = "dual_kawase";        # Blur method (options: "gaussian", "kawase")
size = 0.5; 
strength = 5;
deviation = 15;
};

#blur-method = "kernel";
#blur-size = 50;
#blur-deviation = 5.0;

# Blur background of opaque windows with transparent frames as well.
# blur-background-frame = true;
# Do not let blur radius adjust based on window opacity.
#blur-background-fixed = true;

# blur-kern = "3x3box";
# blur-kern = "5x5box";
# blur-kern = "5x5gaussian"
#blur-kern = "9x9gaussian"

blur-background-exclude = [
    "class_g = 'Peek'",
	"class_g = 'slop'",
	"class_g = 'Pensela'",
	"name = 'Drawing Board'",
#    "window_type = 'dock'",
	"window_type = 'dropdown_menu'",
	"window_type = 'combo'",
	"window_type = 'popup_menu'",
	"window_type = 'utility'",
  "window_type = 'desktop'",
	"_GTK_FRAME_EXTENTS@:c"
];

animations = (
  {
    triggers = ["close", "hide"];
    opacity = {
      curve = "linear";
      duration = 0.1;
      start = "window-raw-opacity-before";
      end = 0;
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
  },
  {
    triggers = ["open", "show"];
    opacity = {
      curve = "cubic-bezier(0,1,1,1)";
      duration = 0.3;
      start = 0;
      end = "window-raw-opacity";
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";
    scale-x = {
      curve = "cubic-bezier(0,1.3,1,1)";
      duration = 0.3;
      start = 0.6;
      end = 1;
    };
    scale-y = "scale-x";
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  },
  {
    triggers = ["geometry"]
    scale-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-width-before / window-width";
      end = 1;
    }
    scale-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-height-before / window-height";
      end = 1;
    }
    offset-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-x-before - window-x";
      end = 0;
    }
    offset-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-y-before - window-y";
      end = 0;
    }

    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  }
)

